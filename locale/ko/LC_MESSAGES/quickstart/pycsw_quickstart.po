# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2011, OSGeo
# This file is distributed under the same license as the OSGeo-Live package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OSGeo-Live 11.0.0.-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-09-13 14:22-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.0\n"

#: ../../build/doc/quickstart/pycsw_quickstart.rst:21
msgid "pycsw Quickstart"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:23
msgid ""
"pycsw is an OGC CSW server implementation written in `Python "
"<http://python.org>`_. pycsw allows for the publishing and discovery of "
"geospatial metadata.  Existing repositories of geospatial metadata can be"
" exposed via OGC:CSW 2.0.2 or OGC:CSW 3.0.0."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:28
msgid "Running the tester application"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:30
msgid ""
"To run the pycsw tester, use the pycsw launcher from the Web Services "
"group, or open Firefox and navigate to "
"``http://localhost/pycsw/tests/index.html``:"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:35
msgid ""
"By selecting the left drop-down list, the user can see various predefined"
" POST requests, encoded as XML, that can be sent to pycsw:"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:40
msgid ""
"For example, by selecting \"apiso/DescribeRecord\", and pushing the "
"\"Send\" button, a description of the ISO Application Profile record is "
"presented on the right panel:"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:45
msgid ""
"By selecting \"GetCapabilities-SOAP\" and pushing the \"Send\" button, a "
"SOAP request is sent to the server to advertise their web service "
"capabilities:"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:50
msgid ""
"Also, the user can search for data records, performing a spatial bounding"
" box query, by selecting \"GetRecords-filter-bbox\" and editing the "
"coordinates in the XML request:"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:55
msgid ""
"The user can go through all the available requests and perform various "
"requests from this testing application."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:58
msgid "Capabilities Document and Configuration"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:60
msgid ""
"The capabilities of the pycsw installation can be found at "
"``http://localhost/pycsw?service=CSW&version=2.0.2&request=GetCapabilities``."
" If you just use ``http://localhost/pycsw`` you will get the capabilities"
" document for CSW 3.0.0, since that is the latest version supported."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:62
msgid ""
"To edit the web service metadata, included in the capabilities document, "
"the user can modify the file ``/etc/pycsw/default.cfg`` under the tag "
"``[metadata:main]``."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:64
msgid ""
"If the user wants to enable INSPIRE Discovery Service support, the "
"metadata under the tag ``[metadata:inspire]`` has to be filled in and the"
" ``enabled`` property has to be set to ``true``."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:66
msgid ""
"For full functionality and configuration options, please consult the "
"`documentation`_ on the pycsw website."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:69
msgid "Metadata Creation"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:71
msgid ""
"Metadata files for a spatial dataset or a spatial web service can be "
"created through the open source implementation of inspire directive for "
"metadata, European Open Source Metadata Editor (EUOSME). This application"
" can be found at ``http://inspire-geoportal.ec.europa.eu/editor/``. "
"Source code is available at "
"``https://joinup.ec.europa.eu/svn/euosme/trunk``"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:73
msgid ""
"The user fills the mandatory metadata fields going through the "
"application tabs, adding information like the name of the data owner, "
"keywords, resource location on the web, geographic location (using a "
"bounding box or the name of a country) etc."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:78
msgid ""
"After the user has added all the information available, must push the "
"validation button on top of the page, so that a check to be performed for"
" consistency with the INSPIRE directive."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:83
msgid ""
"After a sucessful validation, the XML file can be saved to the local disk"
" and viewed through a text editor or a browser."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:87
msgid "Loading Metadata"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:90
msgid "Metadata Repository Setup"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:92
msgid "pycsw supports the following databases:"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:94
msgid "SQLite3"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:95
msgid "PostgreSQL (PostGIS optional)"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:96
msgid "MySQL"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:98
msgid ""
"In OSGeo-Live, a simple SQLite setup has been implemented. The database "
"can be found in ``/usr/share/pycsw/tests/suites/cite/data/records.db``"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:101
msgid "Create new database"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:103
msgid "In order to create a new SQLite database we need to:"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:105
msgid "Edit ``/etc/pycsw/default.cfg``:"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:107
msgid "**[repository]**"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:109
msgid ""
"**database**: the full file path to the metadata database, in database "
"URL format (see http://docs.sqlalchemy.org/en/latest/core/engines.html"
"#database-urls)"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:110
msgid "**table**: the table name for metadata records (default is ``records``)"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:112
msgid "Setup the database:"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:118
msgid "This will create the necessary tables and values for the repository."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:120
msgid ""
"The database created is an `OGC SFSQL`_ compliant database, and can be "
"used with any implementing software.  For example, to use with `OGR`_:"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:132
msgid "Importing Metadata"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:138
msgid ""
"This will import all ``*.xml`` records from ``/path/to/records`` into the"
" new database and configure the repository to expose queryables as per "
"Table 53 of OGC:CSW."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:142
msgid "Data Discovery through QGIS MetaSearch Plugin"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:144
msgid ""
"Start QGIS from the Desktop GIS group and click on the MetaSearch button "
"(CSW icon)"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:149
msgid ""
"Add the pycsw server by pressing the \"New\" button and type in "
"``http://localhost/pycsw/``"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:154
msgid ""
"The user can add some default servers using the \"Add default servers\" "
"button and also get the capabilities of the server using \"Server info\" "
"button"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:159
msgid ""
"Perform search using the catalogue, either by a string value or with a "
"bounding box"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:166
msgid "Things to try"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:168
msgid ""
"Try to discover data through the Tester application by setting the "
"appropriate requests eg. any text search with the string \"imagery\" "
"leads to discovering the xml data created previously by EUOSME"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:173
msgid "Try to discover data through the Python `OWSLib CSW`_ interface."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:175
msgid ""
"Try to discover data from GeoNode, which is also included in OSGeo-Live "
"and uses pycsw as the default CSW engine."
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:178
msgid "What Next?"
msgstr ""

#: ../../build/doc/quickstart/pycsw_quickstart.rst:180
msgid ""
"For more information on pycsw, please consult the `documentation`_ on the"
" pycsw website."
msgstr ""

#~ msgid ""
#~ "pycsw is an OGC CSW server "
#~ "implementation written in `Python "
#~ "<http://python.org>`_."
#~ msgstr ""

#~ msgid ""
#~ "pycsw implements clause 10 (HTTP "
#~ "protocol binding (Catalogue Services for "
#~ "the Web, CSW)) of the `OpenGIS "
#~ "Catalogue Service Implementation Specification`_,"
#~ " version 2.0.2.  Initial development "
#~ "started in 2010 (more formally announced"
#~ " in `2011`_).The project is certified "
#~ "`OGC Compliant`_, and is an `OGC "
#~ "Reference Implementation`_."
#~ msgstr ""

#~ msgid ""
#~ "pycsw allows for the publishing and "
#~ "discovery of geospatial metadata.  Existing"
#~ " repositories of geospatial metadata can"
#~ " be exposed via OGC:CSW 2.0.2."
#~ msgstr ""

#~ msgid ""
#~ "pycsw is `Open Source`_, released under"
#~ " an MIT license, and runs on "
#~ "all major platforms (Windows, Linux, Mac"
#~ " OS X)."
#~ msgstr ""

#~ msgid ""
#~ "pycsw is installed by default on "
#~ "the OSGeo-Live DVD.  This QuickStart "
#~ "will describe how to:"
#~ msgstr ""

#~ msgid "perform a fresh installation of pycsw"
#~ msgstr ""

#~ msgid "test pycsw installation through the tester application"
#~ msgstr ""

#~ msgid ""
#~ "edit pycsw's Capabilities document and "
#~ "display this information in a browser"
#~ msgstr ""

#~ msgid ""
#~ "create ISO 19139 XML metadata records"
#~ " (through INSPIRE Metadata Editor or "
#~ "GIMED)"
#~ msgstr ""

#~ msgid "load the created XML metadata files in pycsw database"
#~ msgstr ""

#~ msgid "install QGIS CSW Client plugin"
#~ msgstr ""

#~ msgid ""
#~ "perform discovery of data through the"
#~ " pycsw Catalogue Service within QGIS"
#~ msgstr ""

#~ msgid "Installation"
#~ msgstr ""

#~ msgid "System Requirements"
#~ msgstr ""

#~ msgid ""
#~ "pycsw is written in `Python "
#~ "<http://python.org>`_, and works with (tested)"
#~ " version 2.6 and 2.7"
#~ msgstr ""

#~ msgid "pycsw requires the following supporting libraries:"
#~ msgstr ""

#~ msgid "`lxml`_ (version >= 2.2.3) for XML support"
#~ msgstr ""

#~ msgid "`SQLAlchemy`_ (version >= 0.0.5) for database bindings"
#~ msgstr ""

#~ msgid "`Shapely`_ (version >= 1.2.8) for spatial query / geometry support"
#~ msgstr ""

#~ msgid "`pyproj`_ (version >= 1.8.9) for coordinate transformations"
#~ msgstr ""

#~ msgid "Installing from Source"
#~ msgstr ""

#~ msgid "`Download pycsw`_ the latest version or clone from `GitHub`_:"
#~ msgstr ""

#~ msgid ""
#~ "Ensure that CGI is enabled for "
#~ "your install directory.  For example, on"
#~ " Apache, if you setup pycsw in "
#~ "``/srv/www/htdocs/pycsw`` (where your URL will"
#~ " be ``http://host/pycsw/csw.py``), add the "
#~ "following to ``httpd.conf``:"
#~ msgstr ""

#~ msgid "Installing from the Python Package Index (PyPi)"
#~ msgstr ""

#~ msgid "Installing on Ubuntu based distributions"
#~ msgstr ""

#~ msgid ""
#~ "In order to install pycsw to an"
#~ " Ubuntu based distribution, one can "
#~ "run the following commands:"
#~ msgstr ""

#~ msgid "Installing on openSUSE"
#~ msgstr ""

#~ msgid ""
#~ "In order to install the OBS "
#~ "package in openSUSE 12.3, one can "
#~ "run the following commands as user "
#~ "``root``:"
#~ msgstr ""

#~ msgid ""
#~ "For earlier openSUSE versions change "
#~ "``12.3`` with ``12.2``. For future "
#~ "openSUSE version use ``Factory``. Rolling "
#~ "version ``Tumbleweed`` is also supported. "
#~ "pycsw is included in the official "
#~ "Application::Geo repository of OpenSUSE Build"
#~ " Service."
#~ msgstr ""

#~ msgid "Tester Application"
#~ msgstr ""

#~ msgid ""
#~ "To run the pycsw tester, use the"
#~ " pycsw launcher from the Web Services"
#~ " group, or open Firefox and navigate"
#~ " to ``http://localhost/pycsw/tester/index.html``:"
#~ msgstr ""

#~ msgid ""
#~ "The capabilities of the pycsw "
#~ "installation can be found at "
#~ "``http://localhost/pycsw/csw.py?service=CSW&version=2.0.2&request=GetCapabilities``."
#~ msgstr ""

#~ msgid ""
#~ "To edit the web service metadata, "
#~ "included in the capabilities document, "
#~ "the user can modify the file "
#~ "``/var/www/pycsw/default.cfg`` under the tag "
#~ "``[metadata:main]``."
#~ msgstr ""

#~ msgid "Using European Open Source Metadata Editor (EUOSME)"
#~ msgstr ""

#~ msgid "Using GIMED"
#~ msgstr ""

#~ msgid ""
#~ "`GIMED`_ is a Free Software for "
#~ "creating and editing INSPIRE compliant "
#~ "metadata XML files. To install the "
#~ "application, use the following commands "
#~ "from a terminal:"
#~ msgstr ""

#~ msgid ""
#~ "The user can follow the same "
#~ "workflow as in EUOSME to add and"
#~ " edit metadata, without the need for"
#~ " an internet connection."
#~ msgstr ""

#~ msgid ""
#~ "In OSGeo-Live, a simple SQLite "
#~ "setup has been implemented. The database"
#~ " can be found in "
#~ "``/var/www/pycsw/tests/suites/cite/data/records.db``"
#~ msgstr ""

#~ msgid "Edit ``default.cfg``:"
#~ msgstr ""

#~ msgid "QGIS CSW Client Installation"
#~ msgstr ""

#~ msgid ""
#~ "The HTTP request/response mechanism is "
#~ "not friendly enough to the end "
#~ "user in order to perform queries "
#~ "to the Catalogue Service. For this "
#~ "tutorial, we will use the :doc:`QGIS "
#~ "<../overview/qgis_overview>` `OGC Catalogue Service"
#~ " Client "
#~ "<https://sourceforge.net/apps/trac/qgiscommunitypl/wiki/qgcsw>`_ "
#~ "plugin."
#~ msgstr ""

#~ msgid "To install the plugin in OSGeoLive:"
#~ msgstr ""

#~ msgid "Data Discovery"
#~ msgstr ""

#~ msgid "QGIS CSW Plugin"
#~ msgstr ""

#~ msgid "Start QGIS from the Desktop GIS group and go to \"Manage Plugins\""
#~ msgstr ""

#~ msgid "Enable the CSW plugin from the list"
#~ msgstr ""

#~ msgid "Then select the CSW button from the toolbar and launch CSW Client"
#~ msgstr ""

#~ msgid ""
#~ "Add the pycsw server by pressing "
#~ "the \"New\" button and type in "
#~ "``http://localhost/pycsw/csw.py``"
#~ msgstr ""

#~ msgid "Data Discovery through GeoExt"
#~ msgstr ""

#~ msgid ""
#~ "Another way to use a pycsw server"
#~ " is through a web application, acting"
#~ " like a CSW client. Such "
#~ "functionality is available through `OpenLayers"
#~ " <http://openlayers.org>`_ and `GeoExt "
#~ "<http://www.geoext.org/>`_ Javascript libraries."
#~ msgstr ""

#~ msgid ""
#~ "For this tutorial we have hacked a"
#~ " small demonstration in GeoExt (thanks "
#~ "`Bart van den Eijnden "
#~ "<https://github.com/bartvde>`_) using a demo "
#~ "pycsw installation at "
#~ "http://demo.pycsw.org/services/csw:"
#~ msgstr ""

#~ msgid "Go to http://demo.pycsw.org/viewer/index2.html"
#~ msgstr ""

#~ msgid "Click icon \"find layers\""
#~ msgstr ""

#~ msgid "Enter \"airports\" (without double quotes)"
#~ msgstr ""

#~ msgid "Click \"search\" or hit Enter"
#~ msgstr ""

#~ msgid "See results"
#~ msgstr ""

#~ msgid ""
#~ "Click the \"add to map\" icon "
#~ "beside the last result on that "
#~ "result set (\"1 Million Scale - "
#~ "Airports\")"
#~ msgstr ""

#~ msgid "See layer added to map panel"
#~ msgstr ""

#~ msgid ""
#~ "Discovery of data can be also "
#~ "performed through the Tester application "
#~ "by setting the appropriate requests eg."
#~ " any text search with the string "
#~ "\"imagery\" leads to discovering the xml"
#~ " data created previously by EUOSME"
#~ msgstr ""

#~ msgid "Contents"
#~ msgstr ""

